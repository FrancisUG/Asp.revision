{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectoCoreb\\\\cursos-online-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme\";\nimport PerfilUsuario from \"./componentes/seguridad/PerfilUsuario\";\nimport Login from \"./componentes/seguridad/Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport RegistrarUsuario from \"./componentes/seguridad/RegistrarUsuario\";\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport AppNavbar from \"./componentes/navegacion/AppNavbar\";\nimport { useStateValue } from \"./contexto/store\";\nimport { obtenerUsuarioActual } from \"./actions/UsuarioAction\"; //import { BrowserRouter as Router, Switch, Route } Switch me permite cambiar las pag, Route es la ruta dl comp q se va cargar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Dsps d estar en 'Index.js'obtenemos un valor d refer d mi sesion d usuario q ya exist en sesionUsuarioReducer y llamamos al obj dispatch\n  //E invok al 'useStateValue' q allow acceso a las var d sesion\n  const [{\n    openSnackbar\n  }, dispatch] = useStateValue(); //Declaramos una var d estado LOCAL q funcione solo a nievl d App.js q allow saber si el reques fue hecho o no al servidor para obtener la data dl user actual\n  //La var local es 'iniciaApp' se ejecutara 1 vez y el metodo q va modificarla sera 'setIniciaApp' y dejamos en 'false' como valor inicial\n  //Como es 1 requests d ida y vuelta al servidor q indica q el user esta o no en sesion la hacemos como flag\n\n  const [iniciaApp, setIniciApp] = useState(false); //Esta f nos permite ejecutar cierto codigo cuaando se haya cargado mi comp react\n\n  useEffect(() => {\n    //Si 'iniciaApp' es falso has esto\n    // A la f \"action\" 'obtenerUsuarioActual' le pasamos como param el 'dispatch', cuando me devuelva una respuesta 'then(response =>'\n    //Le indicamos a esta var q ya se inicio \"setIniciApp(true)\" 'iniciaApp' en true para q no vuelva a ejecutarse esta condicion\n    if (!iniciaApp) {\n      obtenerUsuarioActual(dispatch).then(response => {\n        setIniciApp(true);\n      }).catch(error => {\n        setIniciApp(true);\n      }); //sea error o exitoso siempre quiero q inicie.. por eso ambas condiciones van en true\n    } //Y solo evalua el cambio d valor d 'iniciaApp'\n\n  }, [iniciaApp]);\n  return iniciaApp == false ? null :\n  /*#__PURE__*/\n  //Posterior configuramos el react-router-dom q me permite la comunicacion entre diferentes comp react\n  // <Router> es la q me permite la navegacion entre diferentes comp\n  _jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(MuithemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/auth/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/auth/registrar\",\n            component: RegistrarUsuario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/auth/perfil\",\n            component: PerfilUsuario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: PerfilUsuario\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"upxavWWAbm0Bl5Ka3V1QVMKPrPM=\", false, function () {\n  return [useStateValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/App.js"],"names":["React","useEffect","useState","ThemeProvider","MuithemeProvider","theme","PerfilUsuario","Login","BrowserRouter","Router","Switch","Route","RegistrarUsuario","Grid","Snackbar","AppNavbar","useStateValue","obtenerUsuarioActual","App","openSnackbar","dispatch","iniciaApp","setIniciApp","then","response","catch","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,0BAAlD;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,OAAOC,KAAP,MAAkB,+BAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,gBAAP,MAA6B,0CAA7B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,oBAAT,QAAqC,yBAArC,C,CAEA;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA;AACA,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAmBC,QAAnB,IAA+BJ,aAAa,EAAlD,CAHa,CAMb;AACA;AACA;;AACA,QAAM,CAACK,SAAD,EAAYC,WAAZ,IAA2BpB,QAAQ,CAAC,KAAD,CAAzC,CATa,CAWb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA,QAAI,CAACoB,SAAL,EAAgB;AACdJ,MAAAA,oBAAoB,CAACG,QAAD,CAApB,CACGG,IADH,CACSC,QAAD,IAAc;AAClBF,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OAHH,EAIGG,KAJH,CAIUC,KAAD,IAAW;AAChBJ,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD,OANH,EADc,CAQZ;AACH,KAba,CAed;;AACD,GAhBQ,EAgBN,CAACD,SAAD,CAhBM,CAAT;AAkBA,SAAOA,SAAS,IAAI,KAAb,GAAqB,IAArB;AAAA;AACL;AACA;AACA,UAAC,MAAD;AAAA,2BAEE,QAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEhB,KAAzB;AAAA,8BAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,+BAEE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,aAAlB;AAAgC,YAAA,SAAS,EAAEE;AAA3C;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,iBAAlB;AAAoC,YAAA,SAAS,EAAEK;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,cAAlB;AAAiC,YAAA,SAAS,EAAEN;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAHF,eAME,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,SAAS,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UAHF;AAuBD;;GArDQY,G;UAG8BF,a;;;KAH9BE,G;AAuDT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme\";\nimport PerfilUsuario from \"./componentes/seguridad/PerfilUsuario\";\nimport Login from \"./componentes/seguridad/Login\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport RegistrarUsuario from \"./componentes/seguridad/RegistrarUsuario\";\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport AppNavbar from \"./componentes/navegacion/AppNavbar\";\nimport { useStateValue } from \"./contexto/store\";\nimport { obtenerUsuarioActual } from \"./actions/UsuarioAction\";\n\n//import { BrowserRouter as Router, Switch, Route } Switch me permite cambiar las pag, Route es la ruta dl comp q se va cargar\nfunction App() {\n  //Dsps d estar en 'Index.js'obtenemos un valor d refer d mi sesion d usuario q ya exist en sesionUsuarioReducer y llamamos al obj dispatch\n  //E invok al 'useStateValue' q allow acceso a las var d sesion\n  const [{ openSnackbar }, dispatch] = useStateValue();\n  \n\n  //Declaramos una var d estado LOCAL q funcione solo a nievl d App.js q allow saber si el reques fue hecho o no al servidor para obtener la data dl user actual\n  //La var local es 'iniciaApp' se ejecutara 1 vez y el metodo q va modificarla sera 'setIniciaApp' y dejamos en 'false' como valor inicial\n  //Como es 1 requests d ida y vuelta al servidor q indica q el user esta o no en sesion la hacemos como flag\n  const [iniciaApp, setIniciApp] = useState(false);\n\n  //Esta f nos permite ejecutar cierto codigo cuaando se haya cargado mi comp react\n  useEffect(() => {\n    //Si 'iniciaApp' es falso has esto\n    // A la f \"action\" 'obtenerUsuarioActual' le pasamos como param el 'dispatch', cuando me devuelva una respuesta 'then(response =>'\n    //Le indicamos a esta var q ya se inicio \"setIniciApp(true)\" 'iniciaApp' en true para q no vuelva a ejecutarse esta condicion\n    if (!iniciaApp) {\n      obtenerUsuarioActual(dispatch)\n        .then((response) => {\n          setIniciApp(true);\n        })\n        .catch((error) => {\n          setIniciApp(true);\n        });\n        //sea error o exitoso siempre quiero q inicie.. por eso ambas condiciones van en true\n    }\n\n    //Y solo evalua el cambio d valor d 'iniciaApp'\n  }, [iniciaApp]);\n\n  return iniciaApp == false ? null : (\n    //Posterior configuramos el react-router-dom q me permite la comunicacion entre diferentes comp react\n    // <Router> es la q me permite la navegacion entre diferentes comp\n    <Router>\n      {/*El param q va ingresar sera {theme} q definimos anteriromnt*/}\n      <MuithemeProvider theme={theme}>\n        {/*La barra siempre se mantendra sin importar el comp q vamos a ejecutar por eso como q la dejamos root*/}\n        <AppNavbar />\n\n        <Grid container>\n          {/* <Switch> me permite alternar entre diferents comp */}\n          <Switch>\n            <Route exact path=\"/auth/login\" component={Login} />\n            <Route exact path=\"/auth/registrar\" component={RegistrarUsuario} />\n            <Route exact path=\"/auth/perfil\" component={PerfilUsuario} />\n\n            {/*Para indicar q por defecto cuando cargue me abra el comp 'PerfilUsuario'*/}\n            <Route exact path=\"/\" component={PerfilUsuario} />\n          </Switch>\n        </Grid>\n      </MuithemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}