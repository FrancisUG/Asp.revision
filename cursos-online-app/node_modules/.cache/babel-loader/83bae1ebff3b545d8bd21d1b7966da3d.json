{"ast":null,"code":"//Este reducer se va encargar d almacenar globalment la data dl usuario q esta en sesion en mi App\n//Reducer funciona en 3 parts, la 1ra son los valores q va almacenar, la 2da la logica q va ejecutar dependindo las acciones dl usuario con -->\n//respecto a ese valor inicial y 3ro Exportar la funcion\n//Creamos una const q represent los valores q va almacenar este reducer\n//Hacemos la definicion d la data q va almacenar este reducer y q posterior va ingresarse dentro dl comp 'initialState'\nexport const initialState = {\n  usuario: {\n    nombrecompleto: \"\",\n    email: \"\",\n    username: \"\",\n    foto: \"\"\n  },\n  //Por defecto el usuario tendra el authentcdo en false\n  autenticado: false\n}; // Creamos una f q permita manejar la data va modificarse, 'state' es 1 param q se inicializa con 'initialState' osea la const q definimos arrib\n// y otro param 'action' q es la accion q queremos q ejecute este reducer, este param 'action'determina q sucedera con la data d arriba\n\nconst sesionUsuarioReducer = (state = initialState, action) => {\n  //Determinamos d q tipo es el action, ponemos return xq ahi mismo acabaria el swith o f, delolvera o return el 'state' actual y actualiza el user\n  //usuario: action.sesion.. 'action.sesion' trae un json con la data llena d este usuario el d arriba\n  switch (action.type) {\n    case \"INICIAR_SESION\":\n      return { ...state,\n        usuario: action.sesion,\n        autenticado: action.autenticado\n      };\n\n    case \"SALIR_SESION\":\n      return { ...state,\n        usuario: action.nuevoUsuario,\n        autenticado: action.autenticado\n      };\n\n    case \"ACTUALIZAR_USUARIO\":\n      return { ...state,\n        usuario: action.nuevoUsuario,\n        autenticado: action.autenticado\n      };\n\n    default:\n      return state;\n    //else retorna el state actual\n  }\n};\n\nexport default sesionUsuarioReducer; //Con todo esto ya atualizamos la data dl user a nivel global","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/contexto/reducers/sesionUsuarioReducer.js"],"names":["initialState","usuario","nombrecompleto","email","username","foto","autenticado","sesionUsuarioReducer","state","action","type","sesion","nuevoUsuario"],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cAAc,EAAE,EADT;AAEPC,IAAAA,KAAK,EAAE,EAFA;AAGPC,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,IAAI,EAAE;AAJC,GADiB;AAQ1B;AACAC,EAAAA,WAAW,EAAE;AATa,CAArB,C,CAYP;AACA;;AACA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC7D;AACA;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELP,QAAAA,OAAO,EAAEQ,MAAM,CAACE,MAFX;AAGLL,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAHf,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELP,QAAAA,OAAO,EAAEQ,MAAM,CAACG,YAFX;AAGLN,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAHf,OAAP;;AAKF,SAAK,oBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELP,QAAAA,OAAO,EAAEQ,MAAM,CAACG,YAFX;AAGLN,QAAAA,WAAW,EAAEG,MAAM,CAACH;AAHf,OAAP;;AAKA;AAAS,aAAOE,KAAP;AACT;AApBJ;AAsBD,CAzBD;;AA2BA,eAAeD,oBAAf,C,CACA","sourcesContent":["//Este reducer se va encargar d almacenar globalment la data dl usuario q esta en sesion en mi App\r\n//Reducer funciona en 3 parts, la 1ra son los valores q va almacenar, la 2da la logica q va ejecutar dependindo las acciones dl usuario con -->\r\n//respecto a ese valor inicial y 3ro Exportar la funcion\r\n\r\n//Creamos una const q represent los valores q va almacenar este reducer\r\n//Hacemos la definicion d la data q va almacenar este reducer y q posterior va ingresarse dentro dl comp 'initialState'\r\nexport const initialState = {\r\n  usuario: {\r\n    nombrecompleto: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    foto: \"\",\r\n  },\r\n\r\n  //Por defecto el usuario tendra el authentcdo en false\r\n  autenticado: false,\r\n};\r\n\r\n// Creamos una f q permita manejar la data va modificarse, 'state' es 1 param q se inicializa con 'initialState' osea la const q definimos arrib\r\n// y otro param 'action' q es la accion q queremos q ejecute este reducer, este param 'action'determina q sucedera con la data d arriba\r\nconst sesionUsuarioReducer = (state = initialState, action) => {\r\n  //Determinamos d q tipo es el action, ponemos return xq ahi mismo acabaria el swith o f, delolvera o return el 'state' actual y actualiza el user\r\n  //usuario: action.sesion.. 'action.sesion' trae un json con la data llena d este usuario el d arriba\r\n  switch (action.type) {\r\n    case \"INICIAR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.sesion,\r\n        autenticado: action.autenticado\r\n      };\r\n    case \"SALIR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado\r\n      };\r\n    case \"ACTUALIZAR_USUARIO\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado\r\n      };\r\n      default: return state;\r\n      //else retorna el state actual\r\n  }\r\n};\r\n\r\nexport default sesionUsuarioReducer;\r\n//Con todo esto ya atualizamos la data dl user a nivel global\r\n"]},"metadata":{},"sourceType":"module"}