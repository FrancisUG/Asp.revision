{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectoCoreb\\\\cursos-online-app\\\\src\\\\componentes\\\\seguridad\\\\PerfilUsuario.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { actualizarUsuario, obtenerUsuarioActual } from \"../../actions/UsuarioAction\";\nimport style from \"../Tool/Style\";\nimport { useStateValue } from \"../contexto/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PerfilUsuario = () => {\n  _s();\n\n  const [{\n    sesionUsuario\n  }, dispatch] = use;\n  const [usuario, setUsuario] = useState({\n    //Le indicamos q estos son los valores q quiero mapear\n    nombreCompleto: \"\",\n    email: \"\",\n    password: \"\",\n    confirmarPassword: \"\",\n    username: \"\"\n  }); //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\n\n  const ingresarValoresMemoria = e => {\n    const {\n      name,\n      value\n    } = e.target; //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular y asi sucesivament.... con todo los 'name' d las cajas\n\n    setUsuario(anterior => ({ ...anterior,\n      [name]: value\n    })); //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\n  }; //Vamos hace q se pinte la data cuando la accion se haya realizado\n\n\n  useEffect(() => {\n    //Invocamos al action 'obtenerUsuarioActual'--posterior el srvidor devuelv el obj response\n    obtenerUsuarioActual(dispatch).then(response => {\n      console.log(\"Esta es la data del objeto response del usuario actual\", response);\n      setUsuario(response.data);\n    });\n  }, []); // []) una sola vez llama a este event xq le indicamos q no evalue ninguna var\n  // preventDafault para evitar q haga un submit completo y refresq toda la pag, LLMAMMOS al metodo action 'actualizarUsuario'\n  // le pasamos la data q queremos actualizar actualizarUsuario(usuario) recordar q \"usuario\" es nuestra var d estado q representa la data,\n  // Me va devolver then(response =>,Como me genera un nuevo token lo volvemos a grabar en el local storage  window.localStorage.setItem...\n\n  const guardarUsuario = e => {\n    e.preventDefault();\n    actualizarUsuario(usuario).then(response => {\n      console.log('se actualizo el usuario', usuario);\n      window.localStorage.setItem(\"token_seguridad\", response.data.token);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Perfil de usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: style.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"nombreCompleto\",\n            value: usuario.nombreCompleto || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese nombre y apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"username\",\n            value: usuario.username || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            value: usuario.email || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            value: usuario.password || \"\",\n            type: \"password\",\n            onChange: ingresarValoresMemoria,\n            variant: \"outlined\",\n            fullWidth: true,\n            label: \"Ingrese password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"confirmarPassword\",\n            value: usuario.confirmarPassword || \"\",\n            type: \"password\",\n            onChange: ingresarValoresMemoria,\n            variant: \"outlined\",\n            fullWidth: true,\n            label: \"Confirme password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\" //Le indicamos q invoke al metodo 'guardarUsuario' para implementarlo en la prt superior\n            ,\n            onClick: guardarUsuario,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"primary\",\n            style: style.submit,\n            children: \"Guardar Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PerfilUsuario, \"UjcWQ7iUjyp2xW+uwLfuirpFEAM=\");\n\n_c = PerfilUsuario;\nexport default PerfilUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerfilUsuario\");","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/componentes/seguridad/PerfilUsuario.js"],"names":["Button","Container","Grid","TextField","Typography","React","useEffect","useState","actualizarUsuario","obtenerUsuarioActual","style","useStateValue","PerfilUsuario","sesionUsuario","dispatch","use","usuario","setUsuario","nombreCompleto","email","password","confirmarPassword","username","ingresarValoresMemoria","e","name","value","target","anterior","then","response","console","log","data","guardarUsuario","preventDefault","window","localStorage","setItem","token","paper","form","submit"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { actualizarUsuario, obtenerUsuarioActual } from \"../../actions/UsuarioAction\";\r\nimport style from \"../Tool/Style\";\r\nimport {useStateValue} from \"../contexto/store\";\r\n\r\n\r\n\r\nconst PerfilUsuario = () => {\r\n  const [{sesionUsuario}, dispatch] = use\r\n  const [usuario, setUsuario] = useState({\r\n    //Le indicamos q estos son los valores q quiero mapear\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    username: \"\"\r\n  })\r\n\r\n  //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\r\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\r\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular y asi sucesivament.... con todo los 'name' d las cajas\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n\r\n    //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\r\n  }\r\n\r\n  //Vamos hace q se pinte la data cuando la accion se haya realizado\r\n  useEffect(() => {\r\n    //Invocamos al action 'obtenerUsuarioActual'--posterior el srvidor devuelv el obj response\r\n    obtenerUsuarioActual(dispatch).then((response) => {\r\n      console.log(\r\n        \"Esta es la data del objeto response del usuario actual\", response);\r\n        setUsuario(response.data);\r\n    });\r\n  }, [])\r\n  // []) una sola vez llama a este event xq le indicamos q no evalue ninguna var\r\n\r\n\r\n  // preventDafault para evitar q haga un submit completo y refresq toda la pag, LLMAMMOS al metodo action 'actualizarUsuario'\r\n  // le pasamos la data q queremos actualizar actualizarUsuario(usuario) recordar q \"usuario\" es nuestra var d estado q representa la data,\r\n  // Me va devolver then(response =>,Como me genera un nuevo token lo volvemos a grabar en el local storage  window.localStorage.setItem...\r\n\r\n  const guardarUsuario = e =>{\r\n    e.preventDefault();\r\n    actualizarUsuario(usuario).then(response => {\r\n      console.log('se actualizo el usuario', usuario)\r\n      window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de usuario\r\n        </Typography>\r\n      </div>\r\n      <form style={style.form}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              name=\"nombreCompleto\"\r\n              value={usuario.nombreCompleto||\"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese nombre y apellidos\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"username\"\r\n              value={usuario.username||\"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese username\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={usuario.email||\"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese email\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"password\"\r\n              value={usuario.password||\"\"}\r\n              type=\"password\"\r\n              onChange={ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese password\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"confirmarPassword\"\r\n              value={usuario.confirmarPassword||\"\"}\r\n              type=\"password\"\r\n              onChange={ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Confirme password\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Button\r\n              type=\"submit\"\r\n              //Le indicamos q invoke al metodo 'guardarUsuario' para implementarlo en la prt superior\r\n              onClick= {guardarUsuario}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              style={style.submit}\r\n            >\r\n              Guardar Datos\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PerfilUsuario;\r\n"]},"metadata":{},"sourceType":"module"}