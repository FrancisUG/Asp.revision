{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectoCoreb\\\\cursos-online-app\\\\src\\\\componentes\\\\seguridad\\\\RegistrarUsuario.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\nimport style from \"../tool/Style\";\nimport { registrarUsuario } from '../../actions/UsuarioAction'; //F q representa nuestro 1er comp REACT\n//declaramos la f como const\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrarUsuario = () => {\n  _s();\n\n  //Creamos las var d estado q representen los datos del formulario q permite registar un usuario\n  //'usuario' sera la var d estado y tendra un metodo q permitira cambiar los valores 'setUsuario' para inicializar la var invok al 'useState'\n  // Dentro dl 'useState' definimos la estruct dl json xq 'useState' es 1 obj jason q almacena los param q le pasaremos\n  // La inicializacion d las propiedds d mi json cuando se carguen al inicio son vacias\n  const [usuario, setUsuario] = useState({\n    NombreCompleto: \"\",\n    Email: \"\",\n    Password: \"\",\n    ConfirmarPassword: \"\",\n    Username: \"\"\n  }); //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\n\n  const ingresarValoresMemoria = e => {\n    const {\n      name,\n      value\n    } = e.target; //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular\n\n    setUsuario(anterior => ({ ...anterior,\n      [name]: value\n    })); //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\n  }; //Metodo para el evento Button, se le pasa 'e' q represent el obj boton \n\n\n  const registrarUsuarioBoton = e => {\n    //Al aplastar el btn 'preventDefault' evita q la pag se refresque\n    e.preventDefault(); //console.log(\"Imprime los valores de memoria temporal de usuario\", usuario);\n    //Llamamos al action le pasamos el param q necesito 'usuario' q me tiene toda la data dl form\n    //y me devuel un obj d tipo response \n\n    registrarUsuario(usuario).then(response => {\n      console.log('Se registro exitosamente el usuario', response); //Cuando un user se registre exitosam\n\n      window.localStorage.setItem(\"token_seguridad\", response.data.token);\n    });\n  }; //Creamos la interfaz grafica d este comp\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Registro de Usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: style.form,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"NombreCompleto\" //El valor d la caja d texto tiene q estar vinculado a la var d estado 'usuario.NombreCompleto' y lo hace a traves dl metodo\n              // 'ingresarValoresMemoria'-- nos vamos a la prt d arriba al metodo 'ingresarValoresMemoria' y definimos una const q me capture\n              // los attrib nombre y value d la caja d texto.. y quien represent la c. d texto ?  Pues 'e'\n              ,\n              value: usuario.NombreCompleto,\n              onChange: ingresarValoresMemoria,\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Ingrese nombre y apellidos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"Email\",\n              value: usuario.Email,\n              onChange: ingresarValoresMemoria,\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Ingrese su email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"Username\",\n              value: usuario.Username,\n              onChange: ingresarValoresMemoria,\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Ingrese su username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"Password\",\n              type: \"password\",\n              value: usuario.Password,\n              onChange: ingresarValoresMemoria,\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Ingrese su password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"ConfirmarPassword\",\n              type: \"password\",\n              value: usuario.ConfirmarPassword,\n              onChange: ingresarValoresMemoria,\n              variant: \"outlined\",\n              fullWidth: true,\n              label: \"Confirme su password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: registrarUsuarioBoton,\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              size: \"large\",\n              style: style.submit,\n              children: \"Enviar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrarUsuario, \"dSHeIuJ7/L51JzXJMjBvpVxQyd0=\");\n\n_c = RegistrarUsuario;\nexport default RegistrarUsuario; //Los datos se capturan mediant var d estados, var q son almacenadas d manera temp en la memoria Javascript\n//osea en el virtual DOM de REACT\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrarUsuario\");","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/componentes/seguridad/RegistrarUsuario.js"],"names":["React","useState","Button","Container","Grid","TextField","Typography","style","registrarUsuario","RegistrarUsuario","usuario","setUsuario","NombreCompleto","Email","Password","ConfirmarPassword","Username","ingresarValoresMemoria","e","name","value","target","anterior","registrarUsuarioBoton","preventDefault","then","response","console","log","window","localStorage","setItem","data","token","paper","form","submit"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport style from \"../tool/Style\";\r\nimport {registrarUsuario} from '../../actions/UsuarioAction';\r\n\r\n\r\n\r\n\r\n\r\n\r\n//F q representa nuestro 1er comp REACT\r\n//declaramos la f como const\r\nconst RegistrarUsuario = () => {\r\n  //Creamos las var d estado q representen los datos del formulario q permite registar un usuario\r\n  //'usuario' sera la var d estado y tendra un metodo q permitira cambiar los valores 'setUsuario' para inicializar la var invok al 'useState'\r\n  // Dentro dl 'useState' definimos la estruct dl json xq 'useState' es 1 obj jason q almacena los param q le pasaremos\r\n  // La inicializacion d las propiedds d mi json cuando se carguen al inicio son vacias\r\n  const [usuario, setUsuario] = useState({\r\n    NombreCompleto: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n    ConfirmarPassword: \"\",\r\n    Username: \"\",\r\n  })\r\n\r\n  //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\r\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\r\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n\r\n    //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\r\n  }\r\n\r\n  //Metodo para el evento Button, se le pasa 'e' q represent el obj boton \r\n  const registrarUsuarioBoton = e =>{\r\n    //Al aplastar el btn 'preventDefault' evita q la pag se refresque\r\n    e.preventDefault();\r\n    //console.log(\"Imprime los valores de memoria temporal de usuario\", usuario);\r\n\r\n    //Llamamos al action le pasamos el param q necesito 'usuario' q me tiene toda la data dl form\r\n    //y me devuel un obj d tipo response \r\n    registrarUsuario(usuario).then(response =>{\r\n\r\n      console.log('Se registro exitosamente el usuario', response);\r\n      //Cuando un user se registre exitosam\r\n\r\n      window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n      \r\n    })\r\n\r\n  }\r\n\r\n  //Creamos la interfaz grafica d este comp\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro de Usuario\r\n        </Typography>\r\n\r\n        {/*item 'xs'= como max podra desplegar una app movil\r\n         ocupara toda la pantalla, si es desktop sera 'md 6'  */}\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              {/*  onChange={ingresarValoresMemoria} convierte en 1 var d estado todo el TextField\r\n               */}\r\n              <TextField\r\n                name=\"NombreCompleto\"\r\n                //El valor d la caja d texto tiene q estar vinculado a la var d estado 'usuario.NombreCompleto' y lo hace a traves dl metodo\r\n                // 'ingresarValoresMemoria'-- nos vamos a la prt d arriba al metodo 'ingresarValoresMemoria' y definimos una const q me capture\r\n                // los attrib nombre y value d la caja d texto.. y quien represent la c. d texto ?  Pues 'e'\r\n                value={usuario.NombreCompleto}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese nombre y apellidos\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"Email\"\r\n                value={usuario.Email}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese su email\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"Username\"\r\n                value={usuario.Username}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese su username\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"Password\"\r\n                type=\"password\"\r\n                value={usuario.Password}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese su password\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"ConfirmarPassword\"\r\n                type=\"password\"\r\n                value={usuario.ConfirmarPassword}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Confirme su password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/*fullWidth = a q va ocupar todo el espacio posible, Grid item xs={12}= cuando se trate d 1 telefono tomara toda la pantalla\r\n           y md={6} = cuando se trate de desktop tomara hasta la mitad*/}\r\n          <Grid container justifyContent=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={registrarUsuarioBoton}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegistrarUsuario;\r\n\r\n//Los datos se capturan mediant var d estados, var q son almacenadas d manera temp en la memoria Javascript\r\n//osea en el virtual DOM de REACT\r\n"]},"metadata":{},"sourceType":"module"}