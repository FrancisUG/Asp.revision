{"ast":null,"code":"import axios from \"axios\"; //Endpoint base dond van a correr mis Webservices\n\naxios.defaults.baseURL = \"http://localhost:5000/api/\"; //add un interceptor para q todos los request q salgan dsd AXIOS incluyen en el header el TOKEN\n\naxios.interceptors.request.use(config => {\n  //1ro Capturamos el token d mi browser, dame ese item q se llama getItem('token_seguridad')\n  const token_seguridad = window.localStorage.getItem(\"token_seguridad\"); //Si token_seguridad existe\n\n  if (token_seguridad) {\n    config.headers.Authorization = \"Bearer\" + token_seguridad;\n    return config;\n  }\n}, //Si hubiese cualquier error le damos esta f\nerror => {\n  return Promise.reject(error);\n}); //Lo q representa los request q se uno envia al servidor\n\nconst requestGenerico = {\n  //Metodos q usamos para enviar data, le pasamamos como param la url y una f indicando q axios ejecutara el get\n  //'response' es lo q devuelve axios ero ese response esta en 'action'\n  get: url => axios.get(url),\n  //body va xq el json tiene un cuerpo del mensaje\n  post: (url, body) => axios.post(url, body),\n  put: (url, body) => axios.put(url, body),\n  delete: (url, body) => axios.delete(url, body)\n};\nexport default requestGenerico; //PROCEDEMOS A CREAR una F action q va permitir consumir el recurso generico AXIOS","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/servicios/HttpCliente.js"],"names":["axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","localStorage","getItem","headers","Authorization","error","Promise","reject","requestGenerico","get","url","post","body","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,4BAAzB,C,CAEA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACGC,MAAD,IAAY;AACV;AACA,QAAMC,eAAe,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,CAAxB,CAFU,CAIV;;AACA,MAAIH,eAAJ,EAAqB;AACnBD,IAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+B,WAAWL,eAA1C;AACA,WAAOD,MAAP;AACD;AACF,CAVH,EAWE;AACCO,KAAD,IAAW;AACT,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAdH,E,CAiBA;;AACA,MAAMG,eAAe,GAAG;AACtB;AACA;AACAC,EAAAA,GAAG,EAAGC,GAAD,IAASlB,KAAK,CAACiB,GAAN,CAAUC,GAAV,CAHQ;AAKtB;AACAC,EAAAA,IAAI,EAAE,CAACD,GAAD,EAAME,IAAN,KAAepB,KAAK,CAACmB,IAAN,CAAWD,GAAX,EAAgBE,IAAhB,CANC;AAOtBC,EAAAA,GAAG,EAAE,CAACH,GAAD,EAAME,IAAN,KAAepB,KAAK,CAACqB,GAAN,CAAUH,GAAV,EAAeE,IAAf,CAPE;AAQtBE,EAAAA,MAAM,EAAE,CAACJ,GAAD,EAAME,IAAN,KAAepB,KAAK,CAACsB,MAAN,CAAaJ,GAAb,EAAkBE,IAAlB;AARD,CAAxB;AAUA,eAAeJ,eAAf,C,CAEA","sourcesContent":["import axios from \"axios\";\r\n\r\n//Endpoint base dond van a correr mis Webservices\r\naxios.defaults.baseURL = \"http://localhost:5000/api/\";\r\n\r\n//add un interceptor para q todos los request q salgan dsd AXIOS incluyen en el header el TOKEN\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    //1ro Capturamos el token d mi browser, dame ese item q se llama getItem('token_seguridad')\r\n    const token_seguridad = window.localStorage.getItem(\"token_seguridad\");\r\n\r\n    //Si token_seguridad existe\r\n    if (token_seguridad) {\r\n      config.headers.Authorization = \"Bearer\" + token_seguridad;\r\n      return config;\r\n    }\r\n  },\r\n  //Si hubiese cualquier error le damos esta f\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n//Lo q representa los request q se uno envia al servidor\r\nconst requestGenerico = {\r\n  //Metodos q usamos para enviar data, le pasamamos como param la url y una f indicando q axios ejecutara el get\r\n  //'response' es lo q devuelve axios ero ese response esta en 'action'\r\n  get: (url) => axios.get(url),\r\n\r\n  //body va xq el json tiene un cuerpo del mensaje\r\n  post: (url, body) => axios.post(url, body),\r\n  put: (url, body) => axios.put(url, body),\r\n  delete: (url, body) => axios.delete(url, body),\r\n};\r\nexport default requestGenerico;\r\n\r\n//PROCEDEMOS A CREAR una F action q va permitir consumir el recurso generico AXIOS\r\n"]},"metadata":{},"sourceType":"module"}