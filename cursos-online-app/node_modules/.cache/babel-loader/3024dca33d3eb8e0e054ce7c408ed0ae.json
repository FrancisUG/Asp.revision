{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectoCoreb\\\\cursos-online-app\\\\src\\\\componentes\\\\seguridad\\\\PerfilUsuario.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, TextField, Typography } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { obtenerUsuarioActual, actualizarUsuario } from \"../../actions/UsuarioAction\"; //import ImageUploader from \"react-images-upload\";\n//import reactFoto from \"../../logo.svg\";\n//import { v4 as uuidv4 } from \"uuid\";\n//import { obtenerDataImagen } from \"../../actions/ImagenAction\";\n\nimport style from \"../Tool/Style\";\nimport { useStateValue } from \"../../contexto/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PerfilUsuario = () => {\n  _s();\n\n  const [{\n    sesionUsuario\n  }, dispatch] = useStateValue();\n  const [usuario, setUsuario] = useState({\n    //Le indicamos q estos son los valores q quiero mapear\n    nombreCompleto: \"\",\n    email: \"\",\n    password: \"\",\n    confirmarPassword: \"\",\n    username: \"\"\n  }); //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\n\n  const ingresarValoresMemoria = e => {\n    const {\n      name,\n      value\n    } = e.target; //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular y asi sucesivament.... con todo los 'name' d las cajas\n\n    setUsuario(anterior => ({ ...anterior,\n      [name]: value\n    })); //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\n  }; //Vamos hace q se pinte la data cuando la accion se haya realizado\n\n\n  useEffect(() => {\n    //setUsuario(sesionUsuario.usuario);\n    //Invocamos al action 'obtenerUsuarioActual'--posterior el srvidor devuelv el obj response\n    obtenerUsuarioActual(dispatch).then(response => {\n      console.log('Esta es la data del objeto response del usuario actual', response);\n      setUsuario(response.data);\n    });\n  }, []); // []) una sola vez llama a este event xq le indicamos q no evalue ninguna var\n  // preventDafault para evitar q haga un submit completo y refresq toda la pag, LLMAMMOS al metodo action 'actualizarUsuario'\n  // le pasamos la data q queremos actualizar actualizarUsuario(usuario) recordar q \"usuario\" es nuestra var d estado q representa la data,\n  // Me va devolver then(response =>,Como me genera un nuevo token lo volvemos a grabar en el local storage  window.localStorage.setItem...\n\n  const guardarUsuario = e => {\n    e.preventDefault();\n    console.log('usuario before send', usuario);\n    actualizarUsuario(usuario, dispatch).then(response => {\n      if (response.status === 200) {\n        dispatch({\n          type: \"OPEN_SNACKBAR\",\n          openMensaje: {\n            open: true,\n            mensaje: \"Se guardaron exitosamente los cambios en Perfil Usuario\"\n          }\n        });\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\n      } else {\n        dispatch({\n          type: \"OPEN_SNACKBAR\",\n          openMensaje: {\n            open: true,\n            mensaje: \"Errores al intentar guardar en : \" + Object.keys(response.data.errors)\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.paper,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Perfil de usuario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: style.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"nombreCompleto\",\n            value: usuario.nombreCompleto || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese nombre y apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"username\",\n            value: usuario.username || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"email\",\n            value: usuario.email || \"\",\n            variant: \"outlined\",\n            onChange: ingresarValoresMemoria,\n            fullWidth: true,\n            label: \"Ingrese email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"password\",\n            value: usuario.password || \"\",\n            type: \"password\",\n            onChange: ingresarValoresMemoria,\n            variant: \"outlined\",\n            fullWidth: true,\n            label: \"Ingrese password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"confirmarPassword\",\n            value: usuario.confirmarPassword || \"\",\n            type: \"password\",\n            onChange: ingresarValoresMemoria,\n            variant: \"outlined\",\n            fullWidth: true,\n            label: \"Confirme password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\" //Le indicamos q invoke al metodo 'guardarUsuario' para implementarlo en la prt superior\n            ,\n            onClick: guardarUsuario,\n            fullWidth: true,\n            variant: \"contained\",\n            size: \"large\",\n            color: \"primary\",\n            style: style.submit,\n            children: \"Guardar Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PerfilUsuario, \"D8MCwKDX0FHxH85T2d3OCCoGY0c=\", false, function () {\n  return [useStateValue];\n});\n\n_c = PerfilUsuario;\nexport default PerfilUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerfilUsuario\");","map":{"version":3,"sources":["C:/ProyectoCoreb/cursos-online-app/src/componentes/seguridad/PerfilUsuario.js"],"names":["Button","Container","Grid","TextField","Typography","React","useState","useEffect","obtenerUsuarioActual","actualizarUsuario","style","useStateValue","PerfilUsuario","sesionUsuario","dispatch","usuario","setUsuario","nombreCompleto","email","password","confirmarPassword","username","ingresarValoresMemoria","e","name","value","target","anterior","then","response","console","log","data","guardarUsuario","preventDefault","status","type","openMensaje","open","mensaje","window","localStorage","setItem","token","Object","keys","errors","paper","form","submit"],"mappings":"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","sourcesContent":["import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  obtenerUsuarioActual,\r\n  actualizarUsuario\r\n  \r\n} from \"../../actions/UsuarioAction\";\r\n//import ImageUploader from \"react-images-upload\";\r\n//import reactFoto from \"../../logo.svg\";\r\n//import { v4 as uuidv4 } from \"uuid\";\r\n//import { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\nimport style from \"../Tool/Style\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst PerfilUsuario = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    \r\n    //Le indicamos q estos son los valores q quiero mapear\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    username: \"\",\r\n  });\r\n\r\n  //Creamos la funcion q va disparar los valores al virtual DOM de REACT-- \"e\" = al contenido d la caja d texto\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    //Si quiero cambiar los valores d mi var d estado 'usuario' llamamos al metodo 'setUsuario'\r\n    //Abrimos una f dentro d 'setUsuario' para q mantenga todo lo q existia antes y solo modifiq el valor 'NombreCompleto' d la c. d texto\r\n    // A travs d su propiedad name y value.. 'value' es lo q ingresa el cliente en el formular y asi sucesivament.... con todo los 'name' d las cajas\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n\r\n    //Cuando esto se ejecute mantendra todos los datos anteriores dl form y solo cambiara aquella c. d texto q el usuario ingresa data\r\n  };\r\n\r\n\r\n  //Vamos hace q se pinte la data cuando la accion se haya realizado\r\n  useEffect(() => {\r\n    //setUsuario(sesionUsuario.usuario);\r\n    \r\n    //Invocamos al action 'obtenerUsuarioActual'--posterior el srvidor devuelv el obj response\r\n    obtenerUsuarioActual(dispatch).then((response) => {\r\n      \r\n      console.log(\r\n        'Esta es la data del objeto response del usuario actual', response);\r\n      setUsuario(response.data);\r\n      \r\n    });\r\n  }, [])\r\n  // []) una sola vez llama a este event xq le indicamos q no evalue ninguna var\r\n\r\n  // preventDafault para evitar q haga un submit completo y refresq toda la pag, LLMAMMOS al metodo action 'actualizarUsuario'\r\n  // le pasamos la data q queremos actualizar actualizarUsuario(usuario) recordar q \"usuario\" es nuestra var d estado q representa la data,\r\n  // Me va devolver then(response =>,Como me genera un nuevo token lo volvemos a grabar en el local storage  window.localStorage.setItem...\r\n\r\n  const guardarUsuario = (e) => {\r\n    e.preventDefault();\r\n    console.log('usuario before send', usuario);\r\n    actualizarUsuario(usuario, dispatch).then((response) => {\r\n\r\n      if (response.status === 200) {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Se guardaron exitosamente los cambios en Perfil Usuario\",\r\n          }\r\n        })\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n      }else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Errores al intentar guardar en : \" +\r\n              Object.keys(response.data.errors),\r\n          },\r\n        });\r\n      }\r\n      \r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de usuario\r\n        </Typography>\r\n      </div>\r\n      <form style={style.form}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              name=\"nombreCompleto\"\r\n              value={usuario.nombreCompleto || \"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese nombre y apellidos\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"username\"\r\n              value={usuario.username || \"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese username\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"email\"\r\n              value={usuario.email || \"\"}\r\n              variant=\"outlined\"\r\n              onChange={ingresarValoresMemoria}\r\n              fullWidth\r\n              label=\"Ingrese email\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"password\"\r\n              value={usuario.password || \"\"}\r\n              type=\"password\"\r\n              onChange={ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Ingrese password\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              name=\"confirmarPassword\"\r\n              value={usuario.confirmarPassword || \"\"}\r\n              type=\"password\"\r\n              onChange={ingresarValoresMemoria}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              label=\"Confirme password\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container justifyContent=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <Button\r\n              type=\"submit\"\r\n              //Le indicamos q invoke al metodo 'guardarUsuario' para implementarlo en la prt superior\r\n              onClick={guardarUsuario}\r\n              fullWidth\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              style={style.submit}\r\n            >\r\n              Guardar Datos\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default PerfilUsuario;\r\n"]},"metadata":{},"sourceType":"module"}